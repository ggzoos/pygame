import pygame
import random

# 屏幕尺寸
SCREEN_WIDTH = 640
SCREEN_HEIGHT = 480

# 小方格大小
GRID_SIZE = 20

# 颜色定义
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GREEN = (0, 255, 0)

# 初始化 pygame
pygame.init()

# 创建屏幕
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("贪吃蛇游戏")

# 蛇的初始位置和方向
snake_pos = [200, 100]
snake_direction = "right"

# 蛇的身体坐标列表
snake_body = [[snake_pos[0], snake_pos[1]]]

# 食物位置
food_pos = [random.randint(0, SCREEN_WIDTH // GRID_SIZE - 1) * GRID_SIZE,
            random.randint(0, SCREEN_HEIGHT // GRID_SIZE - 1) * GRID_SIZE]

# 游戏时钟
clock = pygame.time.Clock()

# 游戏结束标志
game_over = False

# 绘制蛇
def draw_snake(snake_body):
    for pos in snake_body:
        pygame.draw.rect(screen, GREEN, [pos[0], pos[1], GRID_SIZE, GRID_SIZE])

# 绘制食物
def draw_food(food_pos):
    pygame.draw.rect(screen, WHITE, [food_pos[0], food_pos[1], GRID_SIZE, GRID_SIZE])

# 游戏主循环
while not game_over:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            game_over = True

        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP and snake_direction!= "down":
                snake_direction = "up"
            elif event.key == pygame.K_DOWN and snake_direction!= "up":
                snake_direction = "down"
            elif event.key == pygame.K_LEFT and snake_direction!= "right":
                snake_direction = "left"
            elif event.key == pygame.K_RIGHT and snake_direction!= "left":
                snake_direction = "right"

    # 根据方向移动蛇头
    if snake_direction == "up":
        snake_pos[1] -= GRID_SIZE
    elif snake_direction == "down":
        snake_pos[1] += GRID_SIZE
    elif snake_direction == "left":
        snake_pos[0] -= GRID_SIZE
    elif snake_direction == "right":
        snake_pos[0] += GRID_SIZE

    # 添加蛇头到身体列表
    snake_body.insert(0, list(snake_pos))

    # 判断是否吃到食物
    if snake_pos[0] == food_pos[0] and snake_pos[1] == food_pos[1]:
        food_pos = [random.randint(0, SCREEN_WIDTH // GRID_SIZE - 1) * GRID_SIZE,
                    random.randint(0, SCREEN_HEIGHT // GRID_SIZE - 1) * GRID_SIZE]
    else:
        # 移除蛇尾
        snake_body.pop()

    # 判断是否撞到自己或边界
    if [snake_pos[0], snake_pos[1]] in snake_body[1:]:
        game_over = True
    elif snake_pos[0] < 0 or snake_pos[0] >= SCREEN_WIDTH or snake_pos[1] < 0 or snake_pos[1] >= SCREEN_HEIGHT:
        game_over = True

    # 清空屏幕
    screen.fill(BLACK)

    # 绘制蛇和食物
    draw_snake(snake_body)
    draw_food(food_pos)

    # 更新屏幕
    pygame.display.flip()

    # 控制帧率
    clock.tick(10)

# 退出游戏
pygame.quit()
